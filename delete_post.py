# !/usr/bin/python
# -*- coding: utf-8 -*-
#
# Created on Oct 16, 2015
# @author:       Bo Zhao
# @email:        bo_zhao@hks.harvard.edu
# @website:      http://yenching.org
# @organization: Harvard Kennedy School

import sys

sys.path.append("/home/bo/.local/lib/python2.7/site-packages")
sys.path.append("/home/bo/Workspace/wbcrawler")

from wbcrawler.log import *
from wbcrawler.settings import UTC, TZCHINA
from pymongo import MongoClient

address = 'localhost'
port = 27017
project = 'five'


def delete(post):
    replies = post['replies']
    # userid = post['user']['userid']
    for reply in replies:
        delete(reply)

    db.posts.delete_many({'mid': post['mid']})
    # db.users.update({'userid': userid}, {'$set': {'latlng': [-2, -2]}})
    # db.users.delete_many({'userid': userid})

    log(NOTICE, "The specified post %d and its replies at %s have been deleted" % (post['mid'], post['timestamp']))


client = MongoClient(address, port)

db = client[project]

utc_end = datetime.datetime(2015, 11, 11, 0, 0, 0, 0, tzinfo=TZCHINA)
utc_start = datetime.datetime(2015, 10, 1, 0, 0, 0, 0, tzinfo=TZCHINA)
deleted = datetime.datetime(2015, 11, 1, 0, 0, 0, 0, tzinfo=UTC)

# utc_now = datetime.datetime.utcnow() - datetime.timedelta(days=33)
# search_json = {"timestamp": {"$lt": utc_start}}
# search_json = {"timestamp": {"$gt": utc_end}}
# search_json = {"timestamp": deleted}
# search_json = {"keyword": u'新兴城镇化'}
# posts = db.posts.find(search_json)
# print posts.count()
# for p in posts:
#     delete(p)

# mids =[3868094826995150, 3885187517491950, 3896902221024940,3889191328916550, 3889580505640040,3868099868645020, 3868261244391920, 3868280533743490, 3890260385498830, 3897612274894020, 3889887801083830, 3897627013713330, 3899695543836640, 3897629152547260]
# mids =[3901639549495600, 3901605936252800, 3892875068645010, 3892866919363780, 3897543283315490, 3889580798926850, 3892866562179180, 3868107368484840, 3889895816796960, 899779241619810, 3897175911928560, 3868235844050470, 3892383944822300, 3899698144040580, 3889579205284170, 3888839511050590, 3899665676064580, 3897629152547260, 3901508204874100,3901509622190960, 3901528073408980, 3890350487708190, 3885517449887560, 3899712450886720, 3897063898761170, 3901592094980080, 3901529877072530, 3868117388644290, 3885143317969490, 3889585988231520, 3899705962050340, 3889826597849660]
# mids =[3899610009106150, 3885503763631820,3901583332928770, 3901788010586820,3868276544799910,3899778884240460,3901793237100540,3868277472387430,3901614538166170,3897678724945820,3899664162543900 ]
# mids = [3901760848359130, 3885547766578120, 3897152981554290, 3899771519437890, 3899663226540440, 3868224846642920, 3901650785710660, 3890322981061230, 3868120047297730, 3901555977295910, 3901536646502950, 3889959368856240, 3868273282188580, 3901530945841170]
# mids = [3896908289972840, 3896910908193450, 3896911993770340, 3896913696601660, 3897015643162700, 3897106571877670, 3897207000290890, 3897236079252230, 3897351024807220, 3897395819650870, 3899699540541290, 3899698467496370, 3901615008103210, 3889930369225960, 3900052386611720, 3899656172051330, 3868236720225240, 3897153258588210, 3897157666984510, 3899685343010870, 900921727185190, 3897222451862250, 3897551495633300, 3897561423033360, 3899704003474340, 3899703231943360, 3897072631210610, 3897185235684890, 3899680809441490, 3897213400938250, 3899711620152460, 3897255990089120, 3897340530430680, 3889900316799640, 3900917394525670, 3899753106089930, 3868106084965470, 3897409719847720, 3899577129899630, 3899726661588250, 3889581810736460, 3886040467020420, 3899706826563530, 3897033742524390, 3900912299351240, 3889888648859150, 3889583777203880, 3897071432140610, 3889892423232460, 3897773030487150, 3899960330499780, 3899679035312330, 3901821942880890, 3899555496564530, 3897605286955970, 3901826447415100, 3887482867347130, 3899748685300830, 3901578882813340, 3899677529561800, 3897861475085720, 3896915428675890, 3899676007006660, 3899671099425040, 3897661344096380, 3901590207251760, 3889969245993130, 3890312386725350, 3899591911408760, 3868222480841680, 3868235596569110, 3868282023230580, 3868245620512830,3889889793517480]
# mids = [3899576475963560, 3899646466774770, 3899665269510960, 3897326068047760,3899669883184300, 3896907363910660, 3896916385675020, 3896916536373260, 3896926817090930, 3896932714187660, 3890220862975680, 3897030201958690, 3897049843726460, 3897068927942090, 3897073206301690, 3897122208543030, 3897128252485300, 3890309219598630, 3897146547640870, 3897151270591130, 3897163857312010, 3897170572508770, 3890544952532520, 3897185547043290, 3897186842380850, 3897194278699120, 3897208803773040, 3899793832849510, 3897215083159640, 3897218312252250, 3897233017524730, 3899696278211160, 3899700539389380, 3899702682410920, 3897316082082690, 3897430016203260, 3897434180176290, 3899712858230680, 3899722781853750, 3899722781853750, 3897452719105460, 3897552305383600, 3899722978803870,3890538245265660,3899781417656850, 3899581202733450,3895586711265860,3889899218700830,3901767337032460,3899700912169720,3897562446581340]
# mids = [3900305772928689, 3895178844726894, 3896902221024942,3903351210944435, 3904651894227401, 3902631125163365, 3904755610760852, 3879035136065048, 3899960464571260, 3901940741888701, 3888076537867068, 3903353375043051, 3903493519691906,3903685614517557, 3903608280562058, 3903790761512523, 3903919523075387, 3904256807077562, 3904419492242589, 3699555222515033, 3904647221864794, 3851099742257655, 3898093193889356, 3897905917968125,3901845271023240]
# mids = [3899695543836648, 3901956194316834, 3901953329164996,3900426891921113, 3898487244927321, 3896990968572011, 3901846948838250]
# mids = [3899211785278188, 3900433405668717, 3898696493757432, 3902261081981181, 3899665676064585, 3900412837485306, 3899965128131374, 3899989057513395,3899232052331244,3902101933234238,3898970516071920]
mids = [3901393402047200]
for mid in mids:
    search_json = {"mid": mid}
    posts = db.posts.find(search_json)
    print posts.count()
    for p in posts:
        delete(p)
